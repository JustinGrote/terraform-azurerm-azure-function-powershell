
#Two Integrated Azure Keyvault Secrets. Will replace these with a foreach loop in Terraform 0.12
# resource "azurerm_key_vault_secret" "username" {
#   name     = "KEYVAULTUSERNAME"
#   value    = "replaceme"
#   key_vault_id = "${azurerm_key_vault.this.id}"
#   depends_on = ["azurerm_key_vault_access_policy.terraform"]
# }

# resource "azurerm_key_vault_secret" "password" {
#   name     = "KEYVAULTPASSWORD"
#   value    = "replaceme"
#   key_vault_id = "${azurerm_key_vault.this.id}"
#   depends_on = ["azurerm_key_vault_access_policy.terraform"]
# }

#Grant access to the account running terraform for purposes of adding additional keys

# resource "azurerm_key_vault_access_policy" "terraform" {
#   key_vault_id = "${azurerm_key_vault.this.id}"
#   tenant_id = "${local.this_az_account_azuread_id}"
#   object_id = "${data.external.this_az_account.result.objectId}"
#   secret_permissions = [
#     "get",
#     "set",
#     "delete"
#   ]
# }

#Grant Read-Only Access for the Azure Function variables
# resource "azurerm_key_vault_access_policy" "this" {
#   key_vault_id = "${azurerm_key_vault.this.id}"
#   tenant_id = "${azurerm_function_app.this.identity.tenant_id}"
#   object_id = "${azurerm_function_app.this.identity.object_id}"
#   secret_permissions = [
#     "get"
#   ]
# }

#Azure Key Vault for Secrets

resource "azurerm_key_vault" "this" {
  name                = "${local.name_prefix}${local.name_suffix}"
  location            = "${var.location}"
  resource_group_name = "${azurerm_resource_group.this.name}"
  tenant_id           = "${local.azure_active_directory_id}"
  sku {
    name = "standard"
  }
}


  #Dumb 0.11 workaround, can just reference directly in 0.12
  #azurerm_function_app_identity = "${element(azurerm_function_app.this.identity,0)}"

data "azurerm_subscription" "this" {}

data "azurerm_client_config" "this" {}

data "external" "this_az_account" {
  program = [
    "az",
    "ad",
    "signed-in-user",
    "show",
    "--query",
    "{displayName: displayName,objectId: objectId,objectType: objectType,odata_metadata: \"odata.metadata\"}"
  ]
}

  #Hacky default but saves an extra data.external call
  this_az_account_azuread_id = "${element(split("/",data.external.this_az_account.result.odata_metadata),3)}"
  azure_active_directory_id = "${
    var.azure_active_directory_id != "" 
      ? var.name
      : local.this_az_account_azuread_id
  }"

  variable "azure_active_directory_id" {
  description = "The Directory ID of your Azure Active Directory, viewable in Properties on the Azure Portal. Defaults to the current Az CLI User's Account"
  default = ""
}
